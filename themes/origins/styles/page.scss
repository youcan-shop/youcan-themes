@import "mixins/breakpoints";

yc-section {
  --reading-mode-width: min(60ch, 100%);

  &:has(.page[data-page-width="reading-mode"]),
  &:has(form) {
    yc-section-head {
      width: var(--reading-mode-width);
      margin-inline: auto;
    }
  }

  .page {
    &[data-page-width="full-width"] {
      width: 100%;
    }

    &[data-page-width="reading-mode"] {
      width: var(--reading-mode-width);
      margin-inline: auto;
    }

    form {
      width: var(--reading-mode-width);
      margin-inline: auto;
      display: grid;
      gap: var(--gap-lg);

      .form-group {
        display: flex;
        gap: var(--gap-lg);

        & > * {
          flex: 1;
        }
      }

      button {
        order: 2;
      }

      textarea {
        max-height: 300px;
      }

      [data-captcha] {
        order: 1;
        display: flex;
        justify-content: center;
        min-height: 85px;
      }
    }

    .success,
    .error {
      display: flex;
      align-items: center;
      gap: var(--gap-md);
      font-size: var(--text-sm);
    }

    .success {
      margin-block-end: 2em;

      .icon {
        color: var(--color-success-500);
      }
    }

    .error {
      .icon {
        color: var(--color-error-500);
      }
    }

    .errors {
      display: flex;
      flex-direction: column;
      gap: var(--gap-sm);
      list-style: disc;
      list-style-position: inside;
      padding-inline-start: 1em;
      font-size: var(--text-sm);
      color: var(--color-error-500);
    }

    // Resets for dynamic content
    div,
    figure,
    picture,
    img {
      max-width: 100% !important;
    }
  }
}

@include breakpoint("sm") {
  yc-section {
    .page {
      form {
        gap: var(--gap-xl);

        .form-group {
          flex-direction: column;
          gap: var(--gap-xl);
        }
      }
    }
  }
}
