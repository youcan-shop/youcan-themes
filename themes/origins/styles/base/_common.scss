@import "../mixins/breakpoints";

// BUTTON
button,
.yc-btn {
  padding: 12px 25px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--gap-md);
  border-radius: var(--button-border-radius);

  &.primary {
    background-color: rgb(var(--color-button));
    color: rgb(var(--color-button-text));
    border: 1px solid rgb(var(--color-button));

    &:focus-visible {
      outline-color: rgb(var(--color-button));
    }
  }

  &.secondary {
    color: rgb(var(--color-secondary-button));
    background-color: transparent;
    border: 1px solid color-mix(in srgb, rgb(var(--color-secondary-button)) 20%, transparent);
  }

  &.destructive {
    color: var(--color-base-white);
    background-color: var(--color-error-500);
  }

  &.link {
    padding: unset;
    position: relative;
    color: rgb(var(--color-button-text));

    &::before {
      content: "";
      opacity: 0;
      height: 100%;
      width: 0%;
      top: 50%;
      left: -12px;
      padding: 5px 0;
      translate: 0 -50%;
      position: absolute;
      border-radius: calc(var(--button-border-radius) * 0.66);
      transition: var(--transition-duration-normal);
      background-color: color-mix(in srgb, currentColor 5%, transparent);
    }
  }

  &.tertiary {
    padding: 0.75em;
  }

  &.ghost {
    background-color: transparent;
  }

  &.icon {
    padding: 12px;
    color: currentColor;
    background-color: transparent;
    border: 1px solid color-mix(in srgb, currentColor 20%, transparent);

    &[data-size$="sm"] {
      padding: 8px;
      border-radius: calc(var(--button-border-radius) * 0.66);

      svg {
        width: 15px;
        height: 15px;
      }
    }

    &[data-size$="lg"] {
      padding: 13px;
    }
  }

  &[data-loading] {
    span,
    svg {
      color: transparent;
    }

    &::before {
      --size: 18px;

      content: "";
      width: var(--size);
      height: var(--size);
      position: absolute;
      border: 1.5px solid currentColor;
      border-bottom-color: transparent;
      border-radius: var(--radius-circle);
      animation: spin 1s linear infinite;
    }
  }

  &:disabled,
  &[data-disabled],
  &[data-loading] {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }

  &:hover:is(.link)::before {
    opacity: 1;
    width: 100%;
    padding: 5px 12px;
  }

  &:hover:is(.ghost, .icon) {
    background-color: color-mix(in srgb, currentColor 5%, transparent);
  }

  &:hover:not(:disabled):is(.secondary) {
    color: currentColor;
    border-color: rgb(var(--color-secondary-button));
    background-color: rgb(var(--color-secondary-button));
  }

  &:hover:not(:disabled):is(.primary, .destructive, .loading, .with-icon) {
    opacity: 0.8;
  }
}

// LINKS
a.link:not(.yc-btn):hover {
  text-decoration: underline;
}

a,
label,
button,
summary,
.yc-btn {
  outline-offset: 1px;
  outline: 1.5px solid transparent;

  &:focus-visible,
  &:has(input:focus-visible) {
    outline-color: rgb(var(--section-text-color, currentColor));
  }
}

// INPUT
select,
textarea,
input:not([type="checkbox"]):not([type="radio"]):not([type="file"]):not([type="search"]) {
  width: 100%;
  padding: 12px 15px;
  background-color: transparent;
  border-radius: var(--input-border-radius);
  color: rgb(var(--section-text-color, var(--color-primary)));
  border: 1px solid color-mix(in srgb, currentColor 20%, transparent);

  @include breakpoint("md") {
    font-size: 16px;
  }

  &::placeholder {
    color: color-mix(in srgb, currentColor 60%, transparent);
  }

  &:focus {
    border: 1px solid currentColor;
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

textarea {
  resize: vertical;
  min-height: 46px;
}

// FORMS
.field {
  display: flex;
  gap: var(--gap-md);
  flex-direction: column;

  input,
  textarea {
    max-height: 150px;
  }

  .label,
  label:not(.images) {
    font-size: var(--text-sm);
  }

  &:has(input:required),
  &:has(textarea:required) {
    & > label::after {
      content: " *";
      color: var(--color-error-500);
    }
  }
}

// SECTION
yc-section {
  display: block;
  padding-inline: 10%;
  color: rgb(var(--section-text-color, var(--color-base-black)));
  background-color: var(--section-bg-color, var(--color-base-white));
  padding-block-start: var(--section-space-top);
  padding-block-end: var(--section-space-bottom);

  > * {
    &:not(:last-child) {
      margin-block-end: var(--gap-3xl);
    }
  }

  &[data-full] {
    padding-inline: 0;
  }

  &:not([data-full]) yc-slider[data-type="full"] {
    .slider-area {
      .slider-box {
        .slider-inner {
          yc-slider-item {
            yc-slider-content {
              padding: 1.5em;
            }
          }
        }
      }
    }

    yc-slider-arrows {
      &[data-position="left"] {
        inset-inline-start: 1.5em;
      }

      &[data-position="right"] {
        inset-inline-end: 1.5em;
      }
    }
  }

  yc-section-head {
    display: grid;
    gap: var(--gap-md);

    &[data-position$="left"] {
      text-align: start;
    }

    &[data-position$="right"] {
      text-align: end;
    }

    &[data-position$="center"] {
      text-align: center;
    }

    p {
      text-wrap: balance;
      font-size: var(--text-md);
      color: rgba(var(--section-text-color), 0.7);
    }
  }
}

.items-grid {
  /*
    Usage:
    This rule depends on --items-columns which is not defined here and should always be defined in the parent of items-grid
  */

  display: grid;
  grid-template-columns: repeat(var(--items-columns, 3), 1fr);
  gap: var(--gap-lg);

  .show-more {
    order: 1;
    display: flex;
    grid-column: 1/-1;
    align-items: center;
    justify-content: center;

    button,
    .yc-btn {
      padding: 8px 15px;
    }
  }
}

yc-slider-footer {
  .show-more {
    button,
    .yc-btn {
      padding: 8px 15px;
    }
  }
}

// Modal
.overlay,
yc-overlay {
  inset: 0;
  z-index: 99;
  position: fixed;
  opacity: 0;
  visibility: hidden;
  backdrop-filter: var(--overlay-blur);
  background-color: var(--overlay-background);
  transition: var(--transition-duration-normal);

  &[data-active] {
    opacity: 1;
    visibility: visible;
  }
}

// Placeholder
.card-placeholder {
  height: 100%;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: currentColor;
  border-radius: var(--radius-md);
  overflow: hidden;

  svg {
    color: color-mix(in srgb, currentColor 70%, transparent);
  }
}

// Rating
.rating {
  display: flex;
  align-items: center;
  gap: var(--gap-sm);
  font-size: var(--text-md);
  color: color-mix(in srgb, currentColor 70%, transparent);

  .stars {
    display: inline-flex;
    gap: var(--gap-2xs);
    color: var(--color-yellow-500);
  }

  .average {
    line-height: 1.2;
  }
}

// Empty State
.empty-page {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 400px;
}

.empty-section {
  padding-block: 5em;
}

.empty {
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: var(--gap-lg);
  text-align: center;

  .icon {
    color: color-mix(in srgb, currentColor 15%, transparent);
  }

  .title {
    font-weight: 550;
  }

  .subheading {
    color: color-mix(in srgb, currentColor 70%, transparent);
  }
}

// Quantity
yc-quantity-control {
  position: relative;
  display: flex;
  align-items: center;
  gap: var(--gap-sm);
  width: fit-content;

  button {
    svg {
      pointer-events: none;
    }
  }

  .current-quantity {
    display: flex;
    justify-content: center;
    align-items: center;
    min-width: 24px;
    text-align: center;
  }

  &[data-loading] {
    pointer-events: none;

    .current-quantity {
      [data-current-quantity] {
        color: transparent;
      }

      &::before {
        content: "";
        width: 18px;
        height: 18px;
        position: absolute;
        border: 1.5px solid currentColor;
        border-bottom-color: transparent;
        border-radius: var(--radius-circle);
        animation: spin 1s linear infinite;
      }
    }
  }
}

// Remove item button
button[data-delete] {
  position: relative;
  border: none;
  background-color: color-mix(in srgb, currentColor 5%, transparent);

  &:hover {
    color: var(--color-error-500);
  }
}

// Product form
yc-product-form {
  button[data-buy-button] {
    span::before {
      content: attr(data-add-to-cart);
    }
  }

  &[not-available] button {
    span::before {
      content: attr(data-out-of-stock);
    }
  }
}

// Variants
yc-variants {
  display: flex;
  gap: var(--gap-xl);
  flex-direction: column;
  padding-block: 1em;

  .variant {
    display: flex;
    gap: var(--gap-sm);
    flex-direction: column;

    .label {
      font-size: var(--text-md);
      color: color-mix(in srgb, currentColor 70%, transparent);
    }
  }
}

// Skeleton
yc-skeleton {
  display: grid;
  gap: var(--gap-xl);
  padding: 1.5em;

  yc-skeleton-group {
    display: flex;
    gap: var(--gap-md);
    flex-direction: column;

    &[data-center] {
      align-items: center;
    }

    &[data-flex-row] {
      flex-direction: row;
    }

    &[data-space-between] {
      flex-direction: row;
      justify-content: space-between;
    }
  }

  yc-skeleton-item {
    overflow: hidden;
    position: relative;
    background-color: color-mix(in srgb, currentColor 10%, transparent);

    &::before {
      content: "";
      width: 100%;
      height: 100%;
      display: block;
      position: absolute;
      transform: translateX(-100%);
      background: linear-gradient(90deg, transparent, color-mix(in srgb, var(--section-bg-color, var(--color-base-white)), transparent), transparent);
      animation: skeleton_loading 1s infinite;

      @keyframes skeleton_loading {
        100% {
          transform: translateX(100%);
        }
      }
    }

    &[variant="text"] {
      width: 100%;
      height: 8px;
      border-radius: var(--radius-sm);

      &:nth-child(2) {
        width: 80%;
      }

      &:nth-child(3) {
        width: 60%;
      }

      &:nth-child(4) {
        width: 40%;
      }
    }

    &[variant="rounded"] {
      width: 50px;
      height: 50px;
      border-radius: var(--radius-sm);
    }
  }
}

// Breadcrumb
.breadcrumb {
  ol {
    display: flex;
    gap: var(--gap-md);
    align-items: center;
    flex-wrap: wrap;

    li {
      --faded-link-color: color-mix(in srgb, currentColor 70%, transparent);

      display: flex;
      align-items: center;
      gap: var(--gap-md);

      svg {
        color: var(--faded-link-color);

        &:dir(rtl) {
          rotate: -180deg;
        }
      }

      a {
        color: var(--faded-link-color);

        &[aria-current] {
          color: currentColor;
          pointer-events: none;
        }
      }
    }
  }
}

// Skip to content
.skip-to-content {
  left: 50%;
  opacity: 0;
  z-index: 1000;
  position: fixed;
  translate: -50% -100%;
  padding: 16px 24px;
  font-size: var(--text-md);
  color: var(--color-base-white);
  background-color: var(--color-base-black);
  border-end-end-radius: var(--button-border-radius);
  border-end-start-radius: var(--button-border-radius);
  transition: var(--transition-duration-fast);

  &:focus-visible {
    opacity: 1;
    translate: -50% 0%;
    outline-color: var(--color-base-black);
  }
}

// Hidden attribute
[hidden] {
  display: none !important;
}

// Breakpoints
@include breakpoint("xl") {
  .items-grid {
    &:has(> :nth-child(4)) {
      grid-template-columns: repeat(2, 1fr);
    }
  }
}

@include breakpoint("lg") {
  .items-grid {
    grid-template-columns: 1fr !important;
  }
}

@include breakpoint("md") {
  .items-grid {
    grid-template-columns: 1fr !important;
  }

  yc-variants {
    padding-block-end: 0;
  }

  yc-section {
    padding-inline: 1em;

    &[data-full] yc-slider[data-type="full"] {
      .slider-area {
        .slider-box {
          .slider-inner {
            yc-slider-item {
              yc-slider-content {
                padding: 1.5em;
              }
            }
          }
        }
      }

      yc-slider-arrows {
        &[data-position="left"] {
          inset-inline-start: 1.5em;
        }

        &[data-position="right"] {
          inset-inline-end: 1.5em;
        }
      }
    }

    yc-section-head {
      p {
        font-size: var(--text-sm);
      }
    }
  }
}

// Keyframes
@keyframes showUp {
  from {
    translate: 0 3em;
  }

  to {
    translate: 0;
  }
}

@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}
